// Overrides for bootstraps forms.less

@{input-prefix} {
  legend { // untouched
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: @line-height-computed;
    font-size: (@font-size-base * 1.5);
    line-height: inherit;
    color: @legend-color;
    border: 0;
    border-bottom: 1px solid @legend-border-color;
  }

  label {
    margin-bottom: 0.4em;
    font-weight: 600;
  }

  output { // untouched
    display: block;
    padding-top: (@padding-base-vertical + 1);
    font-size: @font-size-base;
    line-height: @line-height-base;
    color: @input-color;
  }

  .form-control {
    font-size: 1em;
    color: @color-base;
    background-color: @color-bg;
    border: 1px solid @color-frame;
    border-radius: 4px;
    .box-shadow(inset 0 1px 0px rgba(0,0,0,.06)); //original
    .transition(0);
    &:focus {
      border-color: @color-orange;
      outline: 0;
      .box-shadow(0 0 0);
    }
    .placeholder(lighten(@color-base, 35));
  }

  .form-group {
    margin-bottom: 15px;
  }

  .radio,
  .checkbox {
    display: block;
    margin-top: 10px;
    margin-bottom: 10px;
    padding-left: 20px;
    label {
      display: inline;
      font-weight: normal;
      cursor: pointer;
    }
  }
  .radio input[type="radio"],
  .radio-inline input[type="radio"],
  .checkbox input[type="checkbox"],
  .checkbox-inline input[type="checkbox"] {
    float: left;
    margin-left: -20px;
  }
  .radio + .radio,
  .checkbox + .checkbox {
    margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
  }

  // Radios and checkboxes on same line
  .radio-inline,
  .checkbox-inline {
    display: inline-block;
    padding-left: 20px;
    margin-bottom: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
  }
  .radio-inline + .radio-inline,
  .checkbox-inline + .checkbox-inline {
    margin-top: 0;
    margin-left: 10px; // space out consecutive inline controls
  }


  // Form control sizing
  //
  // Build on `.form-control` with modifier classes to decrease or increase the
  // height and font-size of form controls.

  .input-sm {
    .input-size(@input-height-small; @padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small; @border-radius-small);
  }

  .input-lg {
    .input-size(@input-height-large; @padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @border-radius-large);
  }


  // Form control feedback states
  //
  // Apply contextual and semantic states to individual form controls.

  .has-feedback {
    // Enable absolute positioning
    position: relative;

    // Ensure icons don't overlap text
    .form-control {
      padding-right: (@input-height-base * 1.25);
    }

    // Feedback icon (requires .glyphicon classes)
    .form-control-feedback {
      position: absolute;
      top: (@line-height-computed + 5); // Height of the `label` and its margin
      right: 0;
      display: block;
      width: @input-height-base;
      height: @input-height-base;
      line-height: @input-height-base;
      text-align: center;
    }
  }

  // Feedback states
  .has-success {
    .form-control-validation(@state-success-text; @state-success-text; @state-success-bg);
  }
  .has-warning {
    .form-control-validation(@state-warning-text; @state-warning-text; @state-warning-bg);
  }
  .has-error {
    .form-control-validation(@state-danger-text; @state-danger-text; @state-danger-bg);
  }

  // Help text
  //
  // Apply to any element you wish to create light text for placement immediately
  // below a form control. Use for general help, formatting, or instructional text.

  .help-block {
    display: block; // account for any element using help-block
    margin-top: 5px;
    margin-bottom: 10px;
    color: lighten(@text-color, 25%); // lighten the text some for contrast
  }



  // Inline forms
  //
  // Make forms appear inline(-block) by adding the `.form-inline` class. Inline
  // forms begin stacked on extra small (mobile) devices and then go inline when
  // viewports reach <768px.
  //
  // Requires wrapping inputs and labels with `.form-group` for proper display of
  // default HTML form controls and our custom form controls (e.g., input groups).
  //
  // Heads up! This is mixin-ed into `.navbar-form` in navbars.less.

  .form-inline {

    // Kick in the inline
    @media (min-width: @screen-sm-min) {
      // Inline-block all the things for "inline"
      .form-group {
        display: inline-block;
        margin-bottom: 0;
        vertical-align: middle;
      }

      // In navbar-form, allow folks to *not* use `.form-group`
      .form-control {
        display: inline-block;
        width: auto; // Prevent labels from stacking above inputs in `.form-group`
        vertical-align: middle;
      }
      // Input groups need that 100% width though
      .input-group > .form-control {
        width: 100%;
      }

      .control-label {
        margin-bottom: 0;
        vertical-align: middle;
      }

      // Remove default margin on radios/checkboxes that were used for stacking, and
      // then undo the floating of radios and checkboxes to match (which also avoids
      // a bug in WebKit: https://github.com/twbs/bootstrap/issues/1969).
      .radio,
      .checkbox {
        display: inline-block;
        margin-top: 0;
        margin-bottom: 0;
        padding-left: 0;
        vertical-align: middle;
      }
      .radio input[type="radio"],
      .checkbox input[type="checkbox"] {
        float: none;
        margin-left: 0;
      }

      // Validation states
      //
      // Reposition the icon because it's now within a grid column and columns have
      // `position: relative;` on them. Also accounts for the grid gutter padding.
      .has-feedback .form-control-feedback {
        top: 0;
      }
    }
  }


  // Horizontal forms
  //
  // Horizontal forms are built on grid classes and allow you to create forms with
  // labels on the left and inputs on the right.

  .form-horizontal {

    // Consistent vertical alignment of labels, radios, and checkboxes
    .control-label,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline {
      margin-top: 0;
      margin-bottom: 0;
      padding-top: (@padding-base-vertical + 1); // Default padding plus a border
    }
    // Account for padding we're adding to ensure the alignment and of help text
    // and other content below items
    .radio,
    .checkbox {
      min-height: (@line-height-computed + (@padding-base-vertical + 1));
    }

    // Make form groups behave like rows
    .form-group {
      .make-row();
    }

    .form-control-static {
      padding-top: (@padding-base-vertical + 1);
    }

    // Only right align form labels here when the columns stop stacking
    @media (min-width: @screen-sm-min) {
      .control-label {
        text-align: right;
      }
    }

    // Validation states
    //
    // Reposition the icon because it's now within a grid column and columns have
    // `position: relative;` on them. Also accounts for the grid gutter padding.
    .has-feedback .form-control-feedback {
      top: 0;
      right: (@grid-gutter-width / 2);
    }
  }
} // end @tooltips-prefix